// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Product {
  id          Int               @id @default(autoincrement())
  price       Int
  createdAt   DateTime          @default(now())
  name        String
  description String?
  categories  Category[]
  options     Option[]
  productId   String?
  relateTo    Product[]         @relation("RelatedProducts")
  relatedBy   Product[]         @relation("RelatedProducts")
  image       Image             @relation(fields: [imageId], references: [id])
  imageId     Int
  baskets     ProductToBasket[]

  @@index([imageId])
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]
  image    Image     @relation(fields: [imageId], references: [id])
  imageId  Int

  @@index([imageId])
}

model Option {
  id        Int               @id @default(autoincrement())
  name      String
  price     Int
  image     Image             @relation(fields: [imageId], references: [id])
  imageId   Int
  product   Product           @relation(fields: [productId], references: [id])
  productId Int
  baskets   ProductToBasket[]

  @@index([productId])
  @@index([imageId])
}

model Image {
  id         Int        @id @default(autoincrement())
  name       String     @db.VarChar(255)
  url        String     @db.Text
  Products   Product[]
  Categories Category[]
  Options    Option[]
}

model ProductToBasket {
  id        Int     @id @default(autoincrement())
  quantity  Int
  option    Option  @relation(fields: [optionId], references: [id])
  optionId  Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  orders    Order[]

  @@index([productId])
  @@index([optionId])
}

model Order {
  id               Int               @id @default(autoincrement())
  datetime         DateTime
  isPaid           Boolean           @default(false)
  isEmailSent      Boolean           @default(false)
  paymentIntentId  String?
  price            Int
  productsToBasket ProductToBasket[]
  firstname        String
  lastname         String
  email            String
  phoneNumber      String
  deliveryOption         DeliveryOption    @relation(fields: [deliveryOptionId], references: [id])
  deliveryOptionId Int
  addressLine1     String
  addressLine2     String?
  country          String
  postalCode       String
  city             String
  comment          String?

  @@index([deliveryOptionId])
}

model DeliveryOption {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  price       Int
  orders      Order[]
}
